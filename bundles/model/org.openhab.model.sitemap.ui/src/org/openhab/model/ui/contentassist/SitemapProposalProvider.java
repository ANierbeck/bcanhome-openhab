/*
* generated by Xtext
*/
package org.openhab.model.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;
import org.openhab.core.items.GroupItem;
import org.openhab.core.items.Item;
import org.openhab.core.items.ItemRegistry;
import org.openhab.designer.ui.UIActivator;
/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class SitemapProposalProvider extends AbstractSitemapProposalProvider {
	
	@Override
	public void completeGroup_Item(EObject model, Assignment assignment,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.completeGroup_Item(model, assignment, context, acceptor);

		ItemRegistry registry = (ItemRegistry) UIActivator.itemRegistryTracker.getService();
		if(registry!=null) {
			for(Item item : registry.getItems(context.getPrefix() + "*")) {
				if(item instanceof GroupItem) {
					ICompletionProposal completionProposal = createCompletionProposal(item.getName(), context);
					acceptor.accept(completionProposal);
				}
			}
			context.setPrefix("");
		}
	}
	
	@Override
	public void completeSwitch_Item(EObject model, Assignment assignment,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.completeSwitch_Item(model, assignment, context, acceptor);

		ItemRegistry registry = (ItemRegistry) UIActivator.itemRegistryTracker.getService();
		if(registry!=null) {
			for(Item item : registry.getItems(context.getPrefix() + "*")) {
				ICompletionProposal completionProposal = createCompletionProposal(item.getName(), context);
				acceptor.accept(completionProposal);
			}
			context.setPrefix("");
		}
	}
}
